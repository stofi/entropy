/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.0 coin.glb -T -t
*/

import * as THREE from 'three'
import { GLTF } from 'three-stdlib'
import React, { useRef } from 'react'

import { useGLTF, useTexture } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const slow = 2

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/coin.glb') as any
  const normal = useTexture('/coin-normal.png')
  const groupRef = useRef<THREE.Group | null>(null)
  const groupRef2 = useRef<THREE.Group | null>(null)

  useFrame(() => {
    if (groupRef.current && groupRef2.current) {
      groupRef.current.rotation.x -= 0.05 / slow
      groupRef2.current.rotation.y += 0.01 / slow

      if (window.innerWidth > 768) {
        groupRef2.current.position.x = 0.95
      } else {
        groupRef2.current.position.x = 0
      }
    }
  })

  return (
    <group {...props} dispose={null}>
      <group ref={groupRef2}>
        <group ref={groupRef}>
          <mesh geometry={nodes.Cylinder.geometry} rotation-x={Math.PI / 2}>
            <meshStandardMaterial
              attach='material'
              normalMap={normal}
              color={'#ccc'}
              normalMapType={THREE.TangentSpaceNormalMap}
              normalScale={new THREE.Vector2(-0.5, -0.5)}
              roughness={0.1}
              metalness={1}
            />
          </mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/coin.glb')

export default Model
